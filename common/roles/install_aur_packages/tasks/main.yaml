- name: check whether neovim-symlinks already installed
  shell: "pacman -Qs neovim-symlinks"
  register: neovim_symlinks_installed
  failed_when: false

- name: uninstall vi & vim if neovim-symlinks NOT installed yet
  become: yes
  pacman:
    state: absent
    name:
      - vi
      - vim
      - vim-runtime
  when:
    neovim_symlinks_installed.rc != 0

- name: create symlink to /usr/bin/ for pod2man
  become: yes
  file:
    src: /usr/bin/core_perl/pod2man
    dest: /usr/bin/pod2man
    owner: root
    group: root
    state: link

- name: clean build directory
  become: yes
  file:
    path: "{{ build_directory }}/{{ item }}"
    state: absent
  with_items:
    - neovim-symlinks
    - neofetch-git
    - cdu
    - urlview
    - tmux-mem-cpu-load-git
    - fpp
    - downgrade
    - yay

- name: clean PKGBUILD directory under /tmp/
  become: yes
  file:
    path: "/tmp/{{ item }}"
    state: absent
  with_items:
    - neovim-symlinks
    - neofetch-git
    - cdu
    - urlview
    - tmux-mem-cpu-load-git
    - fpp
    - downgrade
    - yay

- name: install packages hosted in AUR
  include_tasks:
    file: library/aur/pkg.yml
    apply:
      vars:
        pkg_name: "{{ item }}"
  with_items:
    - neovim-symlinks
    - neofetch-git
    - cdu
    - urlview
    - tmux-mem-cpu-load-git
    - fpp
    - downgrade
    - yay

- name: clean build directory for mackerel relate packages
  become: yes
  file:
    path: "{{ build_directory }}/{{ item }}"
    state: absent
  with_items:
    - mackerel-agent
    - mackerel-check-plugins-git
    - mkr
  when: mackerel_api_key is defined

- name: install Mackerel relate packages
  include_tasks:
    file: library/aur/pkg.yml
    apply:
      vars:
        pkg_name: "{{ item }}"
  with_items:
    - mackerel-agent
    - mackerel-check-plugins-git
    - mkr
  when: mackerel_api_key is defined
